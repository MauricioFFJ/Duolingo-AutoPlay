name: Automatic Daily Study

permissions:
  contents: write

on:
  schedule:
    # 4 execuções por dia (UTC) → 09h, 13h, 17h e 20h BRT
    - cron: '0 12 * * *'
    - cron: '0 16 * * *'
    - cron: '0 20 * * *'
    - cron: '0 23 * * *'
  workflow_dispatch:
    inputs:
      lessons:
        description: 'Lições desta execução (opcional). Se não informar, escolhe aleatório.'
        required: false
        type: number

env:
  # Configuração fácil: cada lição vale 10 XP
  MIN_LESSONS: 10    # 100 XP
  MAX_LESSONS: 40   # 400 XP

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v4

      - name: Atraso aleatório para variar horário
        shell: bash
        run: |
          JITTER=$((RANDOM % 91))
          echo "Aguardando $JITTER minutos para variar o horário..."
          sleep "${JITTER}m"

      - name: Inicializar ou carregar plano do dia
        id: plan
        shell: bash
        run: |
          mkdir -p .duo
          TODAY=$(date -u +%F)
          SAVED_DATE=$(cat .duo/total_date.txt 2>/dev/null || echo "")

          if [ "$TODAY" != "$SAVED_DATE" ]; then
            RANGE=$(( MAX_LESSONS - MIN_LESSONS + 1 ))
            TOTAL=$(( (RANDOM % RANGE) + MIN_LESSONS ))
            echo "$TODAY" > .duo/total_date.txt
            echo "$TOTAL" > .duo/total_lessons.txt
            echo "0" > .duo/consumed_lessons.txt
            echo "Novo dia $TODAY. Total de lições definidas: $TOTAL"
          else
            echo "Mesmo dia ($TODAY). Continuando plano existente."
          fi

          TOTAL=$(cat .duo/total_lessons.txt)
          CONSUMED=$(cat .duo/consumed_lessons.txt)
          REMAINING=$((TOTAL - CONSUMED))

          echo "TOTAL=$TOTAL" >> $GITHUB_OUTPUT
          echo "CONSUMED=$CONSUMED" >> $GITHUB_OUTPUT
          echo "REMAINING=$REMAINING" >> $GITHUB_OUTPUT

      - name: Decidir lições desta execução
        id: decide
        shell: bash
        run: |
          REMAINING=${{ steps.plan.outputs.REMAINING }}

          if [ "$REMAINING" -le 0 ]; then
            echo "LESSONS=0" >> $GITHUB_OUTPUT
            echo "Nada a estudar hoje. Total diário já atingido."
            exit 0
          fi

          INPUT="${{ github.event.inputs.lessons }}"
          if [ -n "$INPUT" ]; then
            if [ "$INPUT" -gt "$REMAINING" ]; then
              LESSONS=$REMAINING
            else
              LESSONS=$INPUT
            fi
          else
            if [ "$REMAINING" -lt 2 ]; then
              LESSONS=$REMAINING
            else
              MAX=$(( REMAINING < 8 ? REMAINING : 8 ))
              RANGE=$(( MAX - 2 + 1 ))
              LESSONS=$(( (RANDOM % RANGE) + 2 ))
            fi
          fi

          echo "LESSONS=$LESSONS" >> $GITHUB_OUTPUT
          echo "LESSONS=$LESSONS" >> $GITHUB_ENV
          echo "Lições desta execução: $LESSONS (restantes antes: $REMAINING)"

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Executar estudo no Duolingo
        if: ${{ steps.decide.outputs.LESSONS != '0' }}
        run: node index.js
        env:
          DUOLINGO_JWT: ${{ secrets.DUOLINGO_JWT }}
          LESSONS: ${{ env.LESSONS }}

      - name: Atualizar contadores e log
        if: ${{ steps.decide.outputs.LESSONS != '0' }}
        shell: bash
        run: |
          mkdir -p .duo
          CONSUMED=$(cat .duo/consumed_lessons.txt)
          NEW=$((CONSUMED + LESSONS))
          echo "$NEW" > .duo/consumed_lessons.txt

          XP=$((LESSONS * 10))
          echo "$(date -u +'%Y-%m-%dT%H:%M:%SZ') - ${XP} XP ganhos (${LESSONS} lições)" >> .duo/xp-log.txt

      - name: Commit e push das atualizações
        if: ${{ steps.decide.outputs.LESSONS != '0' }}
        shell: bash
        run: |
          git config user.name "duobot"
          git config user.email "duobot@example.com"
          git pull --rebase || true

          if ! git diff --quiet; then
            git add .duo/*
            git commit -m "Execução: +$((LESSONS*10)) XP (${LESSONS} lições)"
            git push
          else
            echo "Sem mudanças para commitar."
          fi
